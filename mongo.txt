1.Create a collection named orders.
>db.createCollection('orders')

2.Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.
>db.orders.insert({orderDate: new Date("August 27, 2016"), orderTotal: "25.00", lineItems:[ {orderPrice: '25.00'}, {quantity:
 '1'}, {productName: "Cpu"} ] } )

> db.orders.insert({orderDate: new Date("August 26, 2016"), orderTotal: "80.00", lineItems:[ {orderPrice: '40.00'}, {quantity:
 '2'}, {productName: "Gfx"} ] } )

> db.orders.insert({orderDate: new Date("August 29, 2016"), orderTotal: "10.00", lineItems:[ {orderPrice: '5.00'}, {quantity:
'2'}, {productName: "Ram"} ] } )

3.Find a single order document, any order document.
> db.orders.find().limit(1)

4.Find all orders and make them look pretty.
>db.orders.find().pretty()
5.Find all orders with an orderDate that is prior to 1/1/2016.
> db.orders.find({"orderDate":{$lt: new Date("January 01, 2016")}})

6.Find all orders with an orderDate that is after 1/1/2016.
> db.orders.find({"orderDate":{$gt: new Date("January 01, 2016")}})

7.Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.
db.orders.find({'lineItems.quantity': {$lt: 50, $gt: 5}})
8.Update one of your line items to 42.99. HINT: Look at dot notation
> db.orders.update({"lineItems.productName" : "Cpu"}, { $set : { "lineItems.orderPrice" : "42.99"} })
9.Remove one of your orders.
> db.orders.remove({"orderTotal" : "10.00"})
